2.a

The basic entities and relationships occurring in the model are the following:
1. User, representing the table of users with basic information.
2. Product, representing the table of all possible ingredients.
3. Tool, representing the table of known cooking tools.
4. Recipe, representing the table of all possible recipes.

5.Ingredient, representing the relationship of being an ingredient of a specific recipe in certain amount(Between Product-Recipe). 
6.ProductAvailability, representing the relationship between a user and the products in his kitchen (Between Product-User).
7.ToolSet, representing the relationship of being a required tool in a specific recipe(Between Tool-Recipe). 
8.ToolAvailability, representing the relationship between a user and the tool in his kitchen(Between Tool-User).

Starting from these basic entities we created the skeleton structure:

	< picture1-er >


2.b (bottom-up)


Every recipe is made of one or more step, when we started thinking about the possible attributes for recipe, we made the decision to split the recipe in two different entities:

	< picture2-er >

The new relationship(sequence) is meant to split up the recipes so that common steps could be reused and to distinguish different steps better.
The new entity(step) represent the step of a recipe.

2.c (bottom-up)

/*A recipe can have an author that is a user, cause at application level we do the possibility to the user to submit their recipes*/

Then we considered that recipes should have reletionship with the users,in particular what we needed was the reletionship with the author and rating:

	< picture3-er >


Then merge all the pieces for making the Big Picture:


	< picture4-er >


2.d Data Dictionary 

	Entity

Entity name		description		attributes									identifier

Recipe			an algo			idRec,nameRec,,descrtype,cuisine,nation,region,time,diff,auth,authlink	 	id
Product			the possible ingredient	name,class,photo								name
User			the customers/client	username,pass,email								username
Tool			the tool		name,photo									name
step			a piece of sequence	idstep,descr,time,photo,video							id

	Relationship

Relationship name	description		entity involved									attributes

ProductAvailability	user available		User(0,N)-Product(0,N)								quantity
Ingredients		product in a recipe	Product(1,N)-Recipe(1,N)							quantity,optional
Toolavailability	user available		User(0,N)-Tool(0,N)								
ToolSet			tool in a recipe	Tool(0,N)-Recipe(0,N)								optional
Author			is a user author	User(0,N)-Recipe(0,N)								
Rating			rating and review	User(0,N)-Recipe(0,N)								commentRating,rating
Sequence		a sequence of step 	Recipe(1,N)-Step(1,N)								position



2.e Business Rules


	Constraints Rules

	CR1	the classProduct can be:			/*Non completo*/
			-Meat,
			-Vegetable,
			-Mushrooms,
			-Fruit,
			-Fish,
			-Spices,
			-Cereals,
			-Dairy product,
			-Alcohol,
			-Flour,
			-Confectionery?   ( dry and sweet )

	CR2	the typeRecipe can be:
			-starter,
			-first course,
			-second course,
			-dessert,
			-all in one.

	CR3	the cuisine can be:				/*Da completare*/
			-all the nation in the world

	CR4     the regionalOrigin:				/*Da completare*/
			-all the region in the world

	CR5	the regional must be region of the cuisine country

	CR6	(MIN) * <= the rating <= ***** (MAX)	

	CR6	(MIN) * <= the difficulty <= **** (MAX) where:

		*-> easy  ,   **-> normal  ,  ***-> hard , ****-> extreme
	

	Derivation Rules

	DR	the rating is the average of every user's vote for a specific recipe

		
		
			
					



Business Rules and advice:
1-the class of product is computed by the application logic
(e.g. if in a recipe appears a ingredient of meat , the recipe has to be excluded from vegetarian/vegan/fruitarian recipe. )
2- * <= the rating <= *****
3- during the sign in phase the user must complete a captcha for avoiding bot
4- 4-level difficulty :
* -> easy
** -> normal
*** -> hard
**** -> extreme
5- A matrix for transforming the different unity of measure due to the different expression of them
(e.g from teaspoon to ml , from pieces to grams )
THE STANDARD IN THE DB IS:
GRAMS FOR SOLID , ML FOR LIQUID
	
